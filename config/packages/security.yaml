security:
    role_hierarchy:
        ROLE_USER: [ROLE_USER]
        ROLE_BLOGGER: [ROLE_BLOGGER]
        ROLE_READER: [ROLE_READER]
        ROLE_ADMIN: [ROLE_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_BLOGGER, ROLE_READER, ROLE_SUPER_ADMIN]

    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            form_login:
                check_path: login_check
                login_path: app_login
                username_parameter: email
                password_parameter: password
                default_target_path: /
            logout:
                path: app_logout

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_SUPER_ADMIN }
         - { path: ^/user, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
